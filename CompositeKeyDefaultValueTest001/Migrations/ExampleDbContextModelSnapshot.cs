// <auto-generated />
using CompositeKeyDefaultValueTest001;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompositeKeyDefaultValueTest001.Migrations
{
    [DbContext(typeof(ExampleDbContext))]
    partial class ExampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("CompositeKeyDefaultValueTest001.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C"
                        });
                });

            modelBuilder.Entity("CompositeKeyDefaultValueTest001.Models.Something", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Something");
                });

            modelBuilder.Entity("CompositeKeyDefaultValueTest001.Models.SomethingOfCategoryA", b =>
                {
                    b.Property<int>("SomethingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SomethingId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SomethingOfCategoryA");
                });

            modelBuilder.Entity("CompositeKeyDefaultValueTest001.Models.SomethingOfCategoryB", b =>
                {
                    b.Property<int>("SomethingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(2);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SomethingId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SomethingOfCategoryB");
                });

            modelBuilder.Entity("CompositeKeyDefaultValueTest001.Models.Something", b =>
                {
                    b.HasOne("CompositeKeyDefaultValueTest001.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Something_CategoryId_To_Category_Id")
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CompositeKeyDefaultValueTest001.Models.SomethingOfCategoryA", b =>
                {
                    b.HasOne("CompositeKeyDefaultValueTest001.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__SomethingOfCategoryA_CategoryId_To_Category_Id")
                        .IsRequired();

                    b.HasOne("CompositeKeyDefaultValueTest001.Models.Something", "Something")
                        .WithOne("SomethingOfCategoryA")
                        .HasForeignKey("CompositeKeyDefaultValueTest001.Models.SomethingOfCategoryA", "SomethingId", "CategoryId")
                        .HasConstraintName("FK__SomethingOfCategoryA_SomethingId_CategoryId_To_Something_Id_CategoryId")
                        .HasPrincipalKey("CompositeKeyDefaultValueTest001.Models.Something", "Id", "CategoryId")
                        .IsRequired();

                    b.Navigation("Something");
                });

            modelBuilder.Entity("CompositeKeyDefaultValueTest001.Models.SomethingOfCategoryB", b =>
                {
                    b.HasOne("CompositeKeyDefaultValueTest001.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__SomethingOfCategoryB_CategoryId_To_Category_Id")
                        .IsRequired();

                    b.HasOne("CompositeKeyDefaultValueTest001.Models.Something", "Something")
                        .WithOne("SomethingOfCategoryB")
                        .HasForeignKey("CompositeKeyDefaultValueTest001.Models.SomethingOfCategoryB", "SomethingId", "CategoryId")
                        .HasConstraintName("FK__SomethingOfCategoryB_SomethingId_CategoryId_To_Something_Id_CategoryId")
                        .HasPrincipalKey("CompositeKeyDefaultValueTest001.Models.Something", "Id", "CategoryId")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Something");
                });

            modelBuilder.Entity("CompositeKeyDefaultValueTest001.Models.Something", b =>
                {
                    b.Navigation("SomethingOfCategoryA");

                    b.Navigation("SomethingOfCategoryB");
                });
#pragma warning restore 612, 618
        }
    }
}
